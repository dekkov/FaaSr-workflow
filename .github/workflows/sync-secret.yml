name: '  (FAASR SYNC SECRETS)'

on:
  workflow_dispatch:
    inputs:
      # Secrets to sync
      GH_PAT:
        description: 'GH_PAT'
        required: true
        type: boolean
        default: false
      OW_APIkey:
        description: 'OW_APIkey'
        required: true
        type: boolean
        default: false
      AWS_AccessKey:
        description: 'AWS_AccessKey'
        required: true
        type: boolean
        default: false
      AWS_SecretKey:
        description: 'AWS_SecretKey'
        required: true
        type: boolean
        default: false
      AWS_ARN:
        description: 'AWS_ARN'
        required: true
        type: boolean
        default: false
      GCP_SecretKey:
        description: 'GCP_SecretKey'
        required: true
        type: boolean
        default: false
      SLURM_Token:
        description: 'SLURM_Token'
        required: true
        type: boolean
        default: false
      # Object Storage Secrets
      data_server_name:
        description: 'Data server name (e.g., MinIO, AWS, GCP)'
        required: false
        type: string
        default: ""

      # Sync to secrets managers
      sync_to_aws:
        description: 'Sync to AWS Secrets Manager'
        required: true
        type: boolean
        default: false
      sync_to_gcp:
        description: 'Sync to Google Secret Manager'
        required: true
        type: boolean
        default: false
      


jobs:
  sync_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install boto3 google-cloud-secret-manager

      - name: Configure AWS credentials
        if: github.event.inputs.sync_to_aws == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_AccessKey }}
          aws-secret-access-key: ${{ secrets.AWS_SecretKey }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Authenticate to Google Cloud
        if: github.event.inputs.sync_to_gcp == 'true'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SecretKey }}

      - name: Sync secrets to cloud providers
        env:
          # Secret values
          GH_PAT: ${{ secrets.GH_PAT }}
          OW_APIkey: ${{ secrets.OW_APIkey }}
          AWS_AccessKey: ${{ secrets.AWS_AccessKey }}
          AWS_SecretKey: ${{ secrets.AWS_SecretKey }}
          AWS_ARN: ${{ secrets.AWS_ARN }}
          GCP_SecretKey: ${{ secrets.GCP_SecretKey }}
          SLURM_Token: ${{ secrets.SLURM_Token }}
          # Configuration from repository variables
          AWS_REGION: ${{ vars.AWS_REGION }}
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
        run: |
          python scripts/sync_secrets.py \
            ${{ github.event.inputs.GH_PAT == 'true' && '--GH_PAT' || '' }} \
            ${{ github.event.inputs.OW_APIkey == 'true' && '--OW_APIkey' || '' }} \
            ${{ github.event.inputs.AWS_AccessKey == 'true' && '--AWS_AccessKey' || '' }} \
            ${{ github.event.inputs.AWS_SecretKey == 'true' && '--AWS_SecretKey' || '' }} \
            ${{ github.event.inputs.AWS_ARN == 'true' && '--AWS_ARN' || '' }} \
            ${{ github.event.inputs.GCP_SecretKey == 'true' && '--GCP_SecretKey' || '' }} \
            ${{ github.event.inputs.SLURM_Token == 'true' && '--SLURM_Token' || '' }} \
            ${{ github.event.inputs.data_server_name != '' && format('--data-server-name "{0}"', github.event.inputs.data_server_name) || '' }} \
            ${{ github.event.inputs.sync_to_aws == 'true' && '--sync-to-aws' || '' }} \
            ${{ github.event.inputs.sync_to_gcp == 'true' && '--sync-to-gcp' || '' }}